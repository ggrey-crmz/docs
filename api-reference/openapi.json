openapi: 3.0.1
info:
  title: Credit Risk Monitor API
  version: v2
servers:
- url: http://api.creditriskmonitor.com/
paths:
  /v1/Business/IdentificationGroup:
    get:
      tags:
      - Business
      summary: Returns the Identification Group for a single Business.
      operationId: Business_GetIdentificationGroup
      parameters:
      - name: id
        in: query
        description: ID of the Business to get details for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIIdentificationGroup]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIIdentificationGroup]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIIdentificationGroup]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIIdentificationGroup]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIIdentificationGroup]"
  /v1/Business/ReportPDF:
    get:
      tags:
      - Business
      summary: Generates and returns a PDF report for the Business
      operationId: Business_GetReportPDF
      parameters:
      - name: layout
        in: query
        description: "Report layout. Valid values are: Short, Medium, Long."
        schema:
          type: string
      - name: encoding
        in: query
        description: Set to "base64" if Base64 encoding is needed. Leave blank otherwise.
        schema:
          type: string
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /v1/Business/Officers:
    get:
      tags:
      - Business
      summary: Gets the officers for this Business
      operationId: Business_GetOfficers
      parameters:
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessOfficerCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessOfficerCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessOfficerCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessOfficerCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessOfficerCollection]"
  /v1/Business/News:
    get:
      tags:
      - Business
      summary: Gets the 20 most recent news articles about this business
      operationId: Business_GetNews
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/Business/Summary:
    get:
      tags:
      - Business
      summary: Gets the summary text for a Business.
      operationId: Business_GetBusinessSummary
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessSummary]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessSummary]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessSummary]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessSummary]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessSummary]"
  /v1/Business/WordFill:
    get:
      tags:
      - Business
      summary: Gets the WordFill for a Business.
      operationId: Business_GetBusinessWordFill
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIWordFill]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIWordFill]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIWordFill]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIWordFill]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIWordFill]"
  /v1/Business/FSR:
    get:
      tags:
      - Business
      summary: Gets the Experian FSR for a Business
      operationId: Business_GetFSR
      parameters:
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIExperian]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIExperian]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIExperian]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIExperian]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIExperian]"
  /v1/Business/PeerAnalysis:
    get:
      tags:
      - Business
      summary: Gets the Peer Analysis for a Business.
      operationId: Business_GetBusinessPeerAnalysis
      parameters:
      - name: Year
        in: query
        description: Year to get data for
        schema:
          type: integer
          format: int32
      - name: Quarter
        in: query
        description: Quarter to get data for
        schema:
          type: integer
          format: int32
      - name: SICCode
        in: query
        description: SIC Code to filter by
        schema:
          type: string
      - name: SICPrimary
        in: query
        description: Filter by Primary SIC Code only or Primary and Secondary SIC
          Codes (Y/N)
        schema:
          type: string
      - name: FolderId
        in: query
        description: Portfolio FolderId
        schema:
          type: integer
          format: int32
      - name: TargetCountry
        in: query
        description: Two Letter country code
        schema:
          type: string
      - name: RiskLevelFilter
        in: query
        description: "Risk Level (NS - Non-Scored / FS - Non-FRISK Scored / H1 - Risk\
          \ Level 1 / H2 - Risk Level 1 and 2 / H3 - Risk Level 1, 2 and 3 / H4 -\
          \ Risk Level 1, 2, 3 and 4 / H5 - Risk Level 1, 2, 3, 4 and 5 / FS - FRISK\
          \ Scored / FH - FRISK High Risk / FM - FRISK Medium Risk / FL - FRISK Low\
          \ Risk / F1 - FRISK 1 (Highest Risk) / F2 - FRISK 2 / F3 - FRISK 3 / F4\
          \ - FRISK 4 / F5 - FRISK 5 / F6 - FRISK 7 / F8 - FRISK 8 / F9 - FRISK 9\
          \ / F10 - FRISK 10 (Lowest Risk))"
        schema:
          type: string
      - name: ZScoreFilter
        in: query
        description: Filter by ZScore (N - Non Scored/ S - Scored / H - High Risk
          / M - Medium Risk / L - Low Risk)
        schema:
          type: string
      - name: PayceScoreFilter
        in: query
        description: Filter by PAYCE Score (N - Non - PAYCE Scored / S - PAYCE Scored
          / H - PAYCE Score High Risk / M - PAYCE Score Medium Risk / L - PAYCE Score
          Low Risk)
        schema:
          type: string
      - name: DBTFilter
        in: query
        description: Filter by DBT (S - Scored Customers / N - Non-Scored Customers
          / D - Delinquent / W - Slow / P - Prompt / 1 - (160+ days beyond terms)
          / 2 - (91 - 105 days beyond terms) / 3 - (76 - 90 days beyond terms) / 4  -
          (61 - 75 days beyond terms) / 5 - (46 - 60 days beyond terms) / 6 - (31
          - 45 days beyond terms)  / 7 - 2(1 - 30 days beyond terms) / 8 - (11 - 20
          days beyond terms) / 9 - (0 - 10 days beyond terms) / 10 - (no past due
          balances for six periods))
        schema:
          type: string
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPeerAnalysis]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPeerAnalysis]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPeerAnalysis]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPeerAnalysis]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPeerAnalysis]"
  /v1/Business/NAICSCodes:
    get:
      tags:
      - Business
      summary: Gets the NAICS Codes for a Business
      operationId: Business_GetNAICSCodes
      parameters:
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINAICSCodeCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINAICSCodeCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINAICSCodeCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINAICSCodeCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINAICSCodeCollection]"
  /v1/Business/SICCodes:
    get:
      tags:
      - Business
      summary: Gets the SIC Codes for a Business
      operationId: Business_GetSICCodes
      parameters:
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISICCodeCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISICCodeCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISICCodeCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISICCodeCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISICCodeCollection]"
  /v1/Business/CreditScoreHistory:
    get:
      tags:
      - Business
      summary: "Gets the FRISK, PAYCE, DBT, and Z-Score history for a business."
      operationId: Business_GetCreditScoreHistory
      parameters:
      - name: id
        in: query
        description: Business Id
        schema:
          type: integer
          format: int32
      - name: StartDate
        in: query
        description: Staring timeframe to return scores for
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: Ending timeframe to return scores for
        schema:
          type: string
          format: date-time
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditScoreHistoryCollection]"
  /v1/Business/FRISKHistory:
    get:
      tags:
      - Business
      summary: Gets the FRISKHistory for a Business.
      operationId: Business_GetFRISKHistory
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: count
        in: query
        description: The number of rows to return. Returns all rows if count is not
          sent .
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFRISKHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFRISKHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFRISKHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFRISKHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFRISKHistoryCollection]"
  /v1/Business/LatestAnnualStatements:
    get:
      tags:
      - Business
      summary: Gets the Latest Annual Statements for a Business
      operationId: Business_LatestAnnualStatements
      parameters:
      - name: id
        in: query
        description: The ID of the Business to get data for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: count
        in: query
        description: The number of rows to return. If count is not sent returns all
          rows.
        schema:
          type: integer
          format: int32
      - name: StandardYear
        in: query
        description: Gets Statements for the provided Year
        schema:
          type: integer
          format: int32
      - name: SortOrder
        in: query
        description: "Sets the Sort Order of the results. Optional. D = Descending,\
          \ A = Ascending"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
  /v1/Business/LatestInterimStatements:
    get:
      tags:
      - Business
      summary: Gets the Latest Interim Statements for a Business
      operationId: Business_LatestInterimStatements
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: count
        in: query
        description: The number of rows to return. If count is not sent returns all
          rows.
        schema:
          type: integer
          format: int32
      - name: StandardQuarter
        in: query
        description: Gets Statements for the provided Quarter
        schema:
          type: integer
          format: int32
      - name: StandardYear
        in: query
        description: Gets Statements for the provided Year
        schema:
          type: integer
          format: int32
      - name: SortOrder
        in: query
        description: "Sets the Sort Order of the results. Optional. D = Descending,\
          \ A = Ascending"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
  /v1/Business/LatestYTDStatements:
    get:
      tags:
      - Business
      summary: Gets the latest Year To Date statements for a business
      operationId: Business_LatestYTDStatements
      parameters:
      - name: id
        in: query
        description: Business ID
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: count
        in: query
        description: The number of rows to return. If count is not sent returns all
          rows.
        schema:
          type: integer
          format: int32
      - name: StandardYear
        in: query
        description: Gets Statements for the provided Year
        schema:
          type: integer
          format: int32
      - name: SortOrder
        in: query
        description: "Sets the Sort Order of the results. Optional. D = Descending,\
          \ A = Ascending"
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIFinancialsCollection]"
  /v1/Business/CustomLayout:
    get:
      tags:
      - Business
      operationId: Business_CustomLayout
      parameters:
      - name: Layout
        in: query
        required: true
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        schema:
          type: string
      - name: SupplierId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[IAPICustomLayout]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[IAPICustomLayout]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[IAPICustomLayout]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[IAPICustomLayout]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[IAPICustomLayout]"
  /v1/Business/Subsidiaries:
    get:
      tags:
      - Business
      summary: Gets a list of Subsidiaries for a single Business.
      operationId: Business_GetSubsidiaries
      parameters:
      - name: id
        in: query
        description: Id of the Business to get Subsidiaries for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: FirstRow
        in: query
        description: The first row to return.
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The last row to return.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISubsidiaryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISubsidiaryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISubsidiaryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISubsidiaryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APISubsidiaryCollection]"
  /v1/Business/BusinessNames:
    get:
      tags:
      - Business
      summary: Returns the Business Names for a Business
      operationId: Business_GetBusinessNames
      parameters:
      - name: id
        in: query
        description: ID of the Business to get names for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      - name: FirstRow
        in: query
        description: The first row to return.
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The last row to return.
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessNameCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessNameCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessNameCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessNameCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessNameCollection]"
  /v1/Business/PaymentSummary/Monthly:
    get:
      tags:
      - Business
      summary: Returns the Payment Summary for the Business
      operationId: Business_GetPaymentSummaryMonthly
      parameters:
      - name: id
        in: query
        description: ID of the Business to get the Payment Summary for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
  /v1/Business/PaymentSummary/SIC:
    get:
      tags:
      - Business
      summary: Returns the Payment Summary for the Business
      operationId: Business_GetPaymentSummarySIC
      parameters:
      - name: id
        in: query
        description: ID of the Business to get the Payment Summary for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPaymentSummaryCollection]"
  /v1/Business/CreditLimit:
    get:
      tags:
      - Business
      summary: Gets the Credit Limit for the company
      operationId: Business_GetCreditLimit
      parameters:
      - name: id
        in: query
        description: BusinessId of the Business to get a Credit Limit for
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
    post:
      tags:
      - Business
      summary: Creates a new Credit Limit
      operationId: Business_PostCreditLimit
      parameters:
      - name: AvgTrans
        in: query
        description: The average amount you expect to sell to this customer per month.
        required: true
        schema:
          type: number
          format: double
      - name: TransLimit
        in: query
        description: The maximum number of months of sales outstanding that you will
          tolerate from this customer (1 or more).
        required: true
        schema:
          type: number
          format: double
      - name: LossLimit
        in: query
        description: Sets an upper limit on the probability-weighted loss from this
          customer.
        required: true
        schema:
          type: number
          format: double
      - name: ExistingCreditLimit
        in: query
        description: Your current credit limit for this customer.
        required: true
        schema:
          type: integer
          format: int32
      - name: MonitorHi
        in: query
        description: Alert me if maximum limit goes ABOVE this value.
        required: true
        schema:
          type: integer
          format: int64
      - name: MonitorLo
        in: query
        description: Alert me if maximum limit goes BELOW this value.
        required: true
        schema:
          type: integer
          format: int64
      - name: RiskApp
        in: query
        description: "Select the level of risk that is consistent with your credit\
          \ strategy. (HIGH, MED, LOW)"
        required: true
        schema:
          type: string
      - name: CostOfCapital
        in: query
        description: Your cost of capital.
        required: true
        schema:
          type: number
          format: double
      - name: SaleGrossMargin
        in: query
        description: Your expected Gross Profit Margin from sales to this customer.
        required: true
        schema:
          type: number
          format: double
      - name: MonitorFlag
        in: query
        description: Select if you want automatic email alerts on this credit limit.
        required: true
        schema:
          type: string
      - name: id
        in: query
        description: BusinessId of the Business to get a Credit Limit for.
        schema:
          type: integer
          format: int32
      - name: CustomerId
        in: query
        description: If you are a Trade Provider you can use your CustomerId to idenfity
          a Business with the CustomerId parameter.
        schema:
          type: string
      - name: SupplierId
        in: query
        description: If you have a Supplier List you can use your SupplierId to identify
          a Business with the SupplierId parameter.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APICreditLimitResponse]"
  /v1/BusinessLookup:
    get:
      tags:
      - BusinessLookup
      summary: Searches for a Business.
      operationId: BusinessLookup_LookupBusiness
      parameters:
      - name: BusinessName
        in: query
        description: Name of a Business to search for
        schema:
          type: string
      - name: PageSize
        in: query
        description: Number of rows to return
        schema:
          type: integer
          format: int32
      - name: MatchType
        in: query
        description: "How to match the Business. NM: Name Match. PN: Phone Match.\
          \ TS: Ticker Symbol Match. TI: TaxId Match TW: Ticker Symbol Wildcard Match."
        schema:
          type: string
      - name: StreetAddress
        in: query
        description: Street Address to search against
        schema:
          type: string
      - name: CityName
        in: query
        description: City Name to search against
        schema:
          type: string
      - name: ProvinceName
        in: query
        description: State / Province to search against
        schema:
          type: string
      - name: PostalCode
        in: query
        description: Zip / Postal code to search against
        schema:
          type: string
      - name: CountryCode
        in: query
        description: Two digit code of the country
        schema:
          type: string
      - name: PhoneNumber
        in: query
        description: Phone Number to search against.
        schema:
          type: string
      - name: TickerSymbol
        in: query
        description: Ticker Symbol to search against.
        schema:
          type: string
      - name: FederalTaxId
        in: query
        description: Federal Tax Id to search against.
        schema:
          type: string
      - name: Threshold
        in: query
        description: Match Threshold
        schema:
          type: integer
          format: int32
      - name: SearchUniverse
        in: query
        description: "A: All businesses. P: Public companies only."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIBusinessCollection]"
  /v1/News:
    get:
      tags:
      - News
      summary: Gets the top 20 News stories for the current user
      operationId: News_GetUserNews
      parameters:
      - name: Subset
        in: query
        description: "Subset of stories to return (snp, moodys, fitch, dbrs, morningstar)"
        schema:
          type: string
      - name: FirstRow
        in: query
        description: First Row to return
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: Last Row to return
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/SingleNews:
    get:
      tags:
      - News
      summary: Gets a single News Story
      operationId: News_GetSingleNews
      parameters:
      - name: id
        in: query
        description: Id of the News Story to get
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsStory]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsStory]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsStory]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsStory]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsStory]"
  /v1/Industries/News:
    get:
      tags:
      - News
      summary: Gets the top 20 News stories for this industry
      operationId: News_GetNewsByIndustry
      parameters:
      - name: id
        in: query
        description: Industry Id to get News for
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/SICCodes/News:
    get:
      tags:
      - News
      summary: Gets the top 20 News stories for this SIC Code
      operationId: News_GetNewsBySIC
      parameters:
      - name: SICCode
        in: query
        description: SIC Code to get News for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/Portfolio:
    get:
      tags:
      - Portfolio
      summary: Returns the Bussinesses in the current user's Portfolio.
      operationId: Portfolio_GetPortfolio
      parameters:
      - name: FirstRow
        in: query
        description: First row to return
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: Last row to return
        schema:
          type: integer
          format: int32
      - name: FromDate
        in: query
        description: Results will only include Businesses that have had changes since
          this date. Leave NULL to return all Businesses.
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
    post:
      tags:
      - Portfolio
      summary: Adds or Removes Businesses from the Portfolio
      operationId: Portfolio_AddRemoveBusinessesFromPortfolio
      parameters:
      - name: AddBusinesses
        in: query
        description: Comma separated value of Business Ids to Add
        schema:
          type: string
      - name: DeleteBusinesses
        in: query
        description: Comma separated value of Business Ids to Remove
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
  /v1/Portfolio/Folders:
    get:
      tags:
      - Portfolio
      summary: Gets the Portfolio Folders for the current user
      operationId: Portfolio_GetFolders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolderCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolderCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolderCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolderCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolderCollection]"
    post:
      tags:
      - Portfolio
      summary: Creates or Deletes a Portfolio Folder for the current user
      operationId: Portfolio_CreateDeleteFolder
      parameters:
      - name: Folder
        in: query
        description: Name of the folder to create
        schema:
          type: string
      - name: DeleteFolderId
        in: query
        description: FolderId of the folder to Delete
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolder]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolder]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolder]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolder]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioFolder]"
  /v1/Portfolio/Folders/{FolderId}:
    get:
      tags:
      - Portfolio
      summary: Gets the Businesses in a Folder
      operationId: Portfolio_GetBusinessesFromFolder
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get Businesses for
        required: true
        schema:
          type: integer
          format: int32
      - name: FirstRow
        in: query
        description: First row to return
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: Last row to return
        schema:
          type: integer
          format: int32
      - name: FromDate
        in: query
        description: Results will only include Businesses that have had changes since
          this date. Leave NULL to return all Businesses.
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioBusinessCollection]"
    post:
      tags:
      - Portfolio
      summary: Adds or Removes Businesses from a Folder
      operationId: Portfolio_AddRemoveBusinessesFromFolder
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to add Businesses to
        required: true
        schema:
          type: integer
          format: int32
      - name: AddBusinesses
        in: query
        description: Comma separated List of Business Ids to add
        schema:
          type: string
      - name: DeleteBusinesses
        in: query
        description: Comma separated List of Business Ids to remove
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
  /v1/Portfolio/Folders/{FolderId}/News:
    get:
      tags:
      - Portfolio
      summary: Gets the News for Businesses in a Folder
      operationId: Portfolio_GetNewsForFolder
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get News for
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/Portfolio/News:
    get:
      tags:
      - Portfolio
      summary: Gets the News for Businesses in the Portfolio
      operationId: Portfolio_GetNewsForPortfolio
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APINewsCollection]"
  /v1/Portfolio/Download:
    get:
      tags:
      - Portfolio
      summary: Downloads the Portfolio
      operationId: Portfolio_DownloadPortfolio
      parameters:
      - name: Format
        in: query
        description: "The format of data to return. CSV, XML, or JSON."
        schema:
          type: string
      - name: Layout
        in: query
        description: The Custom Layout to return.
        schema:
          type: string
      - name: Folder
        in: query
        description: The Portfolio Folder to return data for.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
  /v1/Portfolio/Folders/{FolderId}/ZScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly Z Scores for Businesses in the selected Folder
      operationId: Portfolio_GetZScoreHistory
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get FRISK Scores for
        required: true
        schema:
          type: integer
          format: int32
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/ZScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly Z Scores for Businesses in the current user's portfolio
      operationId: Portfolio_GetZScoreHistory
      parameters:
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/Folders/{FolderId}/DBTScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly DBT Scores for Businesses in the selected Folder
      operationId: Portfolio_GetDBTScoreHistory
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get DBT Scores for
        required: true
        schema:
          type: integer
          format: int32
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/DBTScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly DBT Scores for Businesses in the current user's portfolio
      operationId: Portfolio_GetDBTScoreHistory
      parameters:
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/Folders/{FolderId}/PAYCEScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly PAYCE Scores for Businesses in the selected Folder
      operationId: Portfolio_GetPAYCEScoreHistory
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get FRISK Scores for
        required: true
        schema:
          type: integer
          format: int32
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/PAYCEScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly PAYCE Scores for Businesses in the current user's
        portfolio
      operationId: Portfolio_GetPAYCEScoreHistory
      parameters:
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/Folders/{FolderId}/FRISKScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly FRISK Scores for Businesses in the selected Folder
      operationId: Portfolio_GetFRISKScoreHistory
      parameters:
      - name: FolderId
        in: path
        description: Id of the Folder to get FRISK Scores for
        required: true
        schema:
          type: integer
          format: int32
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Portfolio/FRISKScoreHistory:
    get:
      tags:
      - Portfolio
      summary: Gets the Monthly FRISK Scores for Businesses in the current user's
        portfolio
      operationId: Portfolio_GetFRISKScoreHistory
      parameters:
      - name: StartDate
        in: query
        description: Start Date for score calculations
        schema:
          type: string
          format: date-time
      - name: EndDate
        in: query
        description: End Date for score calculations
        schema:
          type: string
          format: date-time
      - name: FirstRow
        in: query
        description: The First Row to display
        schema:
          type: integer
          format: int32
      - name: LastRow
        in: query
        description: The Last Row to dispaly
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIPortfolioScoreHistoryCollection]"
  /v1/Token:
    get:
      tags:
      - Token
      operationId: Token_GenerateClientId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIToken]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIToken]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIToken]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIToken]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIToken]"
  /v1/Trade/TradeProviders:
    get:
      tags:
      - TradeProvider
      summary: Gets the list of Trade Providers
      operationId: TradeProvider_GetTradeProviders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[TradeProviderCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[TradeProviderCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[TradeProviderCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[TradeProviderCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[TradeProviderCollection]"
    post:
      tags:
      - TradeProvider
      summary: "Sets the Trade Provider Id to use if more than one are available.\r\
        \nNecessary for referencing a Business by CustomerId if there are more than\
        \ 1 Trade Provider Ids on a user account."
      operationId: TradeProvider_SetSessionTradeProvider
      parameters:
      - name: TradeProviderId
        in: query
        description: The TradeProviderId to use
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[String]"
  /v1/Trade/TradeProviders/Accounts:
    get:
      tags:
      - TradeProvider
      summary: Returns Trade Provider accounts.
      operationId: TradeProvider_GetTradeAccounts
      parameters:
      - name: Layout
        in: query
        description: The subset of data to return. Layout=all returns all fields.
          Layout=scores returns only scores.
        schema:
          type: string
      - name: FromDate
        in: query
        description: Results will only include Businesses that have had changes since
          this date. Leave NULL to return all Businesses.
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIDynamicCollection]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIDynamicCollection]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIDynamicCollection]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIDynamicCollection]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIDynamicCollection]"
  /v1/Users/Login:
    post:
      tags:
      - User
      summary: Logs a user in
      operationId: User_LoginUser
      parameters:
      - name: Username
        in: query
        description: The username of the user to login
        required: true
        schema:
          type: string
      - name: Password
        in: query
        description: The password of the user to login
        required: true
        schema:
          type: string
      - name: LinkBasedMFA
        in: query
        description: "When set to \"Y\" and the User has 2FA enabled the login will\
          \ send a clickable link to the user instead of a One Time Code. Default:\
          \ \"N\"."
        schema:
          type: string
      - name: Key
        in: query
        description: The key recieved from /v1/Users/2FAKey when the User account
          is setup for Browser/Device verification.
        schema:
          type: string
      - name: IsExcel
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
  /v1/Users/Info:
    get:
      tags:
      - User
      summary: Gets the User Info for the currently logged in user
      operationId: User_GetUserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIUserInfo]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIUserInfo]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIUserInfo]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIUserInfo]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APIUserInfo]"
  /v1/Users/2FAKey:
    post:
      tags:
      - User
      summary: Accepts a Two Factor Authentication Key
      operationId: User_Accept2FAKey
      parameters:
      - name: Key
        in: query
        description: The One Time Password that was sent to the users phone.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/json:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/html:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            application/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
            text/xml:
              schema:
                $ref: "#/components/schemas/APIResponseContainer[APILogin]"
components:
  schemas:
    APIResponseContainer[APIIdentificationGroup]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIIdentificationGroup'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIIdentificationGroup:
      type: object
      properties:
        Name:
          type: string
          description: Name of the Business
        ParentBusinessId:
          type: integer
          description: BusinessId of the Parent Business if this Business is a subsidiary
          format: int32
        ParentBusinessName:
          type: string
          description: Name of the Parent Business if this Business is a subsidiary
        BusinessId:
          type: integer
          description: Id of the Business
          format: int32
        Address1:
          type: string
          description: Street address of the Business
        CityName:
          type: string
          description: City for the Business
        StateProvinceName:
          type: string
          description: State / Province for the Business
        PostalCode:
          type: string
          description: Zip / Postal code for the Business
        CountryName:
          type: string
          description: Country for the Business
        PhoneNumber:
          type: string
          description: Phone Number for the Business
        FaxNumber:
          type: string
          description: Fax Number for the Business
        EmailAddress:
          type: string
          description: Email Address for the Business
        TradingStatus:
          type: string
          description: Trading Status for the Business
        IncorporatedDate:
          type: string
          description: Date the Business was incorporated
        IncorporatedIn:
          type: string
          description: Country Code the Business was incorporated in
        IncorporatedInState:
          type: string
          description: State / Province the Business was incorporated in
        FederalTaxId:
          type: string
          description: Federal Tax Id for the Business
        CIKNumber:
          type: string
          description: Central Index Key for the Business
        TickerSymbol:
          type: string
          description: Ticker Symbol for the Business
        StockExchange:
          type: string
          description: Stock Exchange the Business is on
        MarketCap:
          type: integer
          description: Market Capitalization for the Business
          format: int64
        Employees:
          type: integer
          description: Number of Employees the Business has
          format: int32
        EmployeesAsOfDate:
          type: string
          description: Date the Number of Employees is accurate as of
          format: date-time
        PAYCEScore:
          type: integer
          description: PAYCE Score for the Business
          format: int32
        PAYCEScoreDate:
          type: string
          description: Date the PAYCE Score was calculated
          format: date-time
        FriskScore:
          type: integer
          description: FRISKScore for the Business
          format: int32
        FriskScoreDate:
          type: string
          description: Date the FRISK Score was calculated
          format: date-time
        ZScore:
          type: number
          description: Altman Z-Score for the Business
          format: double
        ZScoreDate:
          type: string
          description: Date the Z-Score was calculated
          format: date-time
        DBTIndex:
          type: integer
          description: DBT Index of the Business
          format: int32
        DBTIndexDate:
          type: string
          description: Date the DBT Index was calculated
          format: date-time
        FSRScore:
          type: integer
          description: FSR Score of the Business
          format: int32
        FSRScoreDate:
          type: string
          description: Date the FSR Score was calculated
          format: date-time
        PublicFilings:
          type: integer
          description: Number of public filings
          format: int32
        WebSite:
          type: string
          description: Website for the Business
        SIC:
          type: string
          description: SIC Code for the Business
        NAICS:
          type: string
          description: NAICS Code for the Business
        LatestStatementDate:
          type: string
          description: Latest Statement Date
          format: date-time
        CurrentFiscalYear:
          type: integer
          description: Current Fiscal Year
          format: int32
        CurrentFiscalQuarter:
          type: integer
          description: Current Fiscal Quarter
          format: int32
        BankruptcyType:
          type: string
          description: Bankruptcy Type
        BankruptcyDate:
          type: string
          description: Bankruptcy Date
          format: date-time
        BankruptcyExitDate:
          type: string
          description: Bankruptcy Exit Date
          format: date-time
        TradeAccounts:
          type: integer
          description: Number of Trade Accounts
          format: int32
        TotalDue:
          type: integer
          description: Total Due
          format: int64
        PastDue:
          type: integer
          description: Amount Past Due
          format: int64
        HighRiskLink:
          type: string
          description: URL for the High Risk Story
        CaseStudyLink:
          type: string
          description: URL for the Case Studio
        LastBlogLink:
          type: string
          description: URL for the Last Blog
        FRISKLastChangeDate:
          type: string
          description: Date the FRISK Score Changed
          format: date-time
        PAYCELastChangeDate:
          type: string
          description: Date the PAYCE Score Changed
          format: date-time
        ZScoreLastChangeDate:
          type: string
          description: Date the Z Score Changed
          format: date-time
        FinancialsLastChangeDate:
          type: string
          description: Date the Financials Changed
          format: date-time
        MarketGuideSectorName:
          type: string
        MarketGuideIndustryName:
          type: string
          description: Name of the Industry the Business is in
        CreditLimitMedian:
          type: integer
          description: Median point of the Credit Limit Range
          format: int64
        CreditLimitVeryHigh:
          type: integer
          description: Very High point of the Credit Limit Range
          format: int64
      description: ""
    APIResponseContainer[APIBusinessOfficerCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIBusinessOfficer'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIBusinessOfficer:
      type: object
      properties:
        FirstName:
          type: string
          description: Officers First Name
        MiddleInitial:
          type: string
          description: Officers Middle Initial
        LastName:
          type: string
          description: Officers Last Name
        Age:
          type: integer
          description: Officers Age
          format: int32
        Title:
          type: string
          description: Officers Title
        DateOfTitle:
          type: string
          description: Date Officer recieved the Title
          format: date-time
        DateOfHire:
          type: string
          description: Date of Officers hire
          format: date-time
    APIResponseContainer[APINewsCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APINews'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APINews:
      type: object
      properties:
        id:
          type: integer
          description: Id of the News Story
          format: int32
        title:
          type: string
          description: Title of the News Story
        link:
          type: string
          description: URL to the News Story
        description:
          type: string
          description: Body of the News Story
        pubDate:
          type: string
          description: Published Date of the News Story
      description: ""
    APIResponseContainer[APIBusinessSummary]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIBusinessSummary'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIBusinessSummary:
      type: object
      properties:
        DateFiled:
          type: string
          description: Date this Summary was filed
          format: date-time
        Text:
          type: string
          description: Text of the Summary
      description: ""
    APIResponseContainer[APIWordFill]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIWordFill'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIWordFill:
      type: object
      properties:
        Text:
          type: string
          description: Text of the WordFill
      description: ""
    APIResponseContainer[APIExperian]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIExperian'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIExperian:
      type: object
      properties:
        ExperianYearReported:
          type: integer
          description: ""
          format: int32
        ExperianMonthReported:
          type: integer
          description: ""
          format: int32
        ExperianBIN:
          type: integer
          description: ""
          format: int32
        ExperianName:
          type: string
          description: ""
        ExperianStreet:
          type: string
          description: ""
        ExperianCity:
          type: string
          description: ""
        ExperianState:
          type: string
          description: ""
        ExperianZip:
          type: string
          description: ""
        ExperianPhone:
          type: string
          description: ""
        ExperianDisputeIndicator:
          type: string
          description: ""
        ExperianBankruptcyIndicator:
          type: string
          description: ""
        ExperianSICCode:
          type: string
          description: ""
        ExperianNumberOfEmployees:
          type: integer
          description: ""
          format: int32
        ExperianFSRScore:
          type: integer
          description: ""
          format: int32
        ExperianFSRClass:
          type: integer
          description: ""
          format: int32
        ExperianFSRScoreFactor1:
          type: integer
          description: ""
          format: int32
        ExperianFSRScoreFactor2:
          type: integer
          description: ""
          format: int32
        ExperianFSRScoreFactor3:
          type: integer
          description: ""
          format: int32
        ExperianFSRScoreFactor4:
          type: integer
          description: ""
          format: int32
        ExperianTotalAccountBalance:
          type: integer
          description: ""
          format: int64
        ExperianCombinedAccountBalance:
          type: integer
          description: ""
          format: int64
        ExperianCombinedTradeLinesCount:
          type: integer
          description: ""
          format: int64
        ExperianCombinedDBT:
          type: integer
          description: ""
          format: int32
        ExperianMedianCredit:
          type: integer
          description: ""
          format: int64
        ExperianHighCredit:
          type: integer
          description: ""
          format: int64
        ExperianLegalItemCount:
          type: integer
          description: ""
          format: int32
        ExperianDerogatoryItemCount:
          type: integer
          description: ""
          format: int32
        ExperianLienCount:
          type: integer
          description: ""
          format: int32
        ExperianJudgmentCount:
          type: integer
          description: ""
          format: int32
        ExperianCollectionCount:
          type: integer
          description: ""
          format: int32
        ExperianLegalBalance:
          type: integer
          description: ""
          format: int64
        ExperianLienBalance:
          type: integer
          description: ""
          format: int64
        ExperianJudgmentBalance:
          type: integer
          description: ""
          format: int64
        ExperianYearsInFile:
          type: integer
          description: ""
          format: int32
      description: ""
    APIResponseContainer[APIPeerAnalysis]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIPeerAnalysis'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIPeerAnalysis:
      type: object
      properties:
        PeerYear:
          type: integer
          description: Year for this analysis
          format: int32
        PeerQuarter:
          type: integer
          description: Financial Quarters for this analysis
          format: int32
        SIC:
          type: string
          description: SIC Code for the Business
        IndustryName:
          type: string
          description: Industry Code for the Business
        PeerCount:
          type: integer
          description: Peer Count for the Business
          format: int32
        Ratios:
          type: array
          description: Peer Review Data
          items:
            $ref: '#/components/schemas/APIPeerRatio'
      description: Peer Analysis
    APIPeerRatio:
      type: object
      properties:
        Ratio:
          type: string
        Value:
          type: number
          format: double
        Max:
          type: number
          format: double
        Min:
          type: number
          format: double
        Median:
          type: number
          format: double
        Count:
          type: integer
          format: int32
        Rank:
          type: integer
          format: int32
    APIResponseContainer[APINAICSCodeCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APINAICSCode'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APINAICSCode:
      type: object
      properties:
        Code:
          type: string
          description: The NAICS Code
        Name:
          type: string
          description: The name of the NAICS Code
    APIResponseContainer[APISICCodeCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APISICCode'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APISICCode:
      type: object
      properties:
        Code:
          type: string
          description: The SIC Code
        Name:
          type: string
          description: The name of the SIC Code
        Primary:
          type: boolean
          description: If this SIC Code is the Businesses primary SIC Code
    APIResponseContainer[APICreditScoreHistoryCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APICreditScoreHistory'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APICreditScoreHistory:
      type: object
      properties:
        FRISKScore:
          type: integer
          description: FRISK Score
          format: int32
        DBTScore:
          type: integer
          description: DBT Index
          format: int32
        ZScore:
          type: number
          description: Altman Z-score
          format: double
        PAYCEScore:
          type: integer
          description: PAYCE Score
          format: int32
        FSRScore:
          type: integer
          description: FSR Score
          format: int32
        Year:
          type: integer
          description: Year for these scores
          format: int32
        Month:
          type: integer
          description: Month for these scores
          format: int32
        Quarter:
          type: integer
          description: Quarter for these scores
          format: int32
      description: Credit Scores
    APIResponseContainer[APIFRISKHistoryCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIFRISKHistory'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIFRISKHistory:
      type: object
      properties:
        Year:
          type: integer
          description: Year for this FRISK Score
          format: int32
        Month:
          type: integer
          description: Month for this FRISK Score
          format: int32
        AverageFRISKScore:
          type: integer
          description: Average FRISK Score for this Year and Month
          format: int32
      description: ""
    APIResponseContainer[APIFinancialsCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIFinancials'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIFinancials:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: object
            properties: {}
      description: ""
    APIResponseContainer[IAPICustomLayout]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/IAPICustomLayout'
        ErrorCode:
          type: string
          description: ""
      description: ""
    IAPICustomLayout:
      type: object
      description: ""
    APIResponseContainer[APISubsidiaryCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APISubsidiary'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APISubsidiary:
      type: object
      properties:
        BusinessId:
          type: integer
          description: Business Id
          format: int32
        BusinessName:
          type: string
          description: Business Name
        Address1:
          type: string
          description: Address 1
        Address2:
          type: string
          description: Address 2
        CityName:
          type: string
          description: City
        StateProvinceName:
          type: string
          description: State
        PostalCode:
          type: string
          description: Zip Code / Postal Code
        CountryCode:
          type: string
          description: Country
        FRISKScore:
          type: integer
          description: FRISK Score
          format: int32
        PAYCEScore:
          type: integer
          description: PAYCE Score
          format: int32
        DBTIndex:
          type: integer
          description: Days Beyond Terms
          format: int32
      description: Holds a Subsidiary for the API
    APIResponseContainer[APIBusinessNameCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIBusinessName'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIBusinessName:
      type: object
      properties:
        Name:
          type: string
          description: Business Name
        Country:
          type: string
          description: Country
      description: ""
    APIResponseContainer[APIPaymentSummaryCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIPaymentSummary'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIPaymentSummary:
      type: object
      properties:
        CategoryName:
          type: string
          description: ""
        CategoryCode:
          type: string
          description: ""
        MonthReported:
          type: string
          description: ""
        Accounts:
          type: integer
          description: ""
          format: int32
        DBTIndex:
          type: integer
          description: ""
          format: int32
        AverageDBTIndex:
          type: integer
          description: ""
          format: int32
        TotalDue:
          type: integer
          description: ""
          format: int64
        CurrentAmount:
          type: integer
          description: ""
          format: int64
        PastDue30Days:
          type: integer
          description: ""
          format: int64
        PastDue60Days:
          type: integer
          description: ""
          format: int64
        PastDue90Days:
          type: integer
          description: ""
          format: int64
        PastDueOver90Days:
          type: integer
          description: ""
          format: int64
        OtherAmount:
          type: integer
          description: ""
          format: int64
        CreditBalance:
          type: integer
          description: ""
          format: int64
        CurrentAmountPercent:
          type: number
          description: ""
          format: double
        PastDue30DaysPercent:
          type: number
          description: ""
          format: double
        PastDue60DaysPercent:
          type: number
          description: ""
          format: double
        PastDue90DaysPercent:
          type: number
          description: ""
          format: double
        PastDueOver90DaysPercent:
          type: number
          description: ""
          format: double
        OtherAmountPercent:
          type: number
          description: ""
          format: double
      description: ""
    APIResponseContainer[APICreditLimitResponse]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APICreditLimitResponse'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APICreditLimitResponse:
      type: object
      properties:
        MaxLimit:
          type: integer
          description: Maximum Credit Limit
          format: int32
        RecommendedCreditLimit:
          type: integer
          description: Recommended Credit Limit
          format: int32
        ZScore:
          type: number
          description: ZScore for the Business
          format: double
        StockVolatility:
          type: number
          description: "A measure of the amount by which a company's daily stock price\
            \ fluctuates over a trailing 6 month period, with greater weighting given\
            \ to the recent months"
          format: double
        Leverage:
          type: number
          description: "A calculation of Leverage and Debt Coverage. Leverage is Total\
            \ Liabilities divided by Total Assets, and is typically between 0 and\
            \ 1.4.  A lower value is better."
          format: double
        LatestStatementDate:
          type: string
          description: The date of the financials used in the credit limit calculations.
          format: date-time
        Rationale:
          type: string
          description: Comments/Rational related to the credit limit.
          readOnly: true
        AvgTransaction:
          type: number
          description: The average amount you expect to sell to this customer per
            month.
          format: double
        TransactionLimit:
          type: integer
          description: The maximum number of months of sales outstanding that you
            will tolerate from this customer (1 or more).
          format: int32
        MaxExpectedLossLimit:
          type: integer
          description: Upper limit on the probability-weighted loss from this customer.
          format: int32
        RiskAppetite:
          type: string
          description: "Level of risk that is consistent with your credit strategy\
            \ (HIGH, MED, or LOW)"
        CostOfCapital:
          type: number
          description: Your cost of capital
          format: double
        GrossMargin:
          type: number
          description: Your expected Gross Profit Margin from sales to this customer
          format: double
        ExistingCreditLimit:
          type: integer
          description: Your current credit limit for this customer.
          format: int32
        MonitorFlag:
          type: string
          description: "Automatic monitoring (A - Automatic, Y - Manual, N - No monitoring)"
        MonitorHi:
          type: integer
          description: Alert me if maximum limit goes ABOVE this value
          format: int64
        MonitorLo:
          type: integer
          description: Alert me if maximum limit goes BELOW this value
          format: int64
        CurrencyCode:
          type: string
          description: "The Currency Code of this Business (USD, GBP, JPY, etc)"
        BusinessId:
          type: integer
          description: Id of the Business
          format: int32
        PrimaryBusinessName:
          type: string
          description: Name of the Business
      description: ""
    APIResponseContainer[APIBusinessCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIBusiness'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIBusiness:
      type: object
      properties:
        BusinessId:
          type: integer
          description: ID of the Business
          format: int32
        PrimaryBusinessName:
          type: string
          description: Name of the Business
        Address1:
          type: string
          description: Address of the Business
        Address2:
          type: string
          description: Secondary Address of the Business
        CityName:
          type: string
          description: City of the Business
        StateCode:
          type: string
          description: Two Digit State / Province code
        PostalCode:
          type: string
          description: Zip / Postal code for the Business
        CountryName:
          type: string
          description: Country name for the Business
        CountryCode:
          type: string
          description: Two digit Country Code for the Business
        PhoneNumber:
          type: string
          description: Phone Number for the Business
        TradingStatus:
          type: string
          description: Trading Status for the Business
        IncorporatedDate:
          type: string
          description: Date the Business was Incorporated
        IncorporatedIn:
          type: string
          description: City the Business was Incorporated In
        IncorporatedInState:
          type: string
          description: State the Business was Incorporated In
        TickerSymbol:
          type: string
          description: Ticker Symbol for the Business
        StockExchange:
          type: string
          description: Stock Exchange the Business is in
        FederalTaxId:
          type: string
          description: Federal Tax Id for the Business
        CIKNumber:
          type: string
          description: Central Index Key for the Business
        LatestStatementDate:
          type: string
          description: Date of the Latest Statement for the Business
          format: date-time
        Employees:
          type: integer
          description: Number of Employees in the Business
          format: int32
        EmployeesAsOfDate:
          type: string
          description: Date the Number of Employees is accurate as of
          format: date-time
        MarketCap:
          type: integer
          description: Market Capitalization for the Business
          format: int64
        BusinessNameOfMatch:
          type: string
          description: Business Name found from Matching
        Address1OfMatch:
          type: string
          description: Address1 found from Matching
        Address2OfMatch:
          type: string
          description: Address2 found from Matching
        CityNameOfMatch:
          type: string
          description: City Name found from Matching
        StateCodeOfMatch:
          type: string
          description: State Code found from Matching
        PostalCodeOfMatch:
          type: string
          description: Zip/Postal Code found from Matching
        CountryCodeOfMatch:
          type: string
          description: Country Code found from Matching
        PhoneNumberOfMatch:
          type: string
          description: Phone Number found from Matching
        FaxNumberOfMatch:
          type: string
          description: Fax Number found from Matching
        FriskScore:
          type: integer
          description: FRISKScore of the Business
          format: int32
        FriskScoreDate:
          type: string
          description: Date of the FRISKScore
          format: date-time
        PayceScore:
          type: integer
          description: PAYCEScore of the Business
          format: int32
        PayceScoreDate:
          type: string
          description: Date of the PAYCEScore
          format: date-time
        MoodysIssuerCount:
          type: integer
          description: If the Business has a Moodys Rating
          format: int32
        FitchRatingCount:
          type: integer
          description: If the Business has a Fitch Rating
          format: int32
        BankruptcyCount:
          type: integer
          description: Count of Bankruptcies for the Business
          format: int32
        JudgmentCount:
          type: integer
          description: Count of Judgements for the Business
          format: int32
        LienCount:
          type: integer
          description: Count of Liens for the Business
          format: int32
        BusinessNewsCount:
          type: integer
          description: Count of News for the Business
          format: int32
        TradePayments:
          type: boolean
          description: If Trade Payments are available
        ParentBusinessId:
          type: integer
          description: The BusinessId of the Parent Business if this Business is a
            Subsidiary
          format: int32
      description: Holds a Business for the API
    APIResponseContainer[APINewsStory]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APINewsStory'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APINewsStory:
      type: object
      properties:
        StoryHeadline:
          type: string
          description: The Headline of the story
        StoryBody:
          type: string
          description: The Body of the story
        StoryProvider:
          type: string
          description: The Provider of the story
        StoryDate:
          type: string
          description: The Date of the story
          format: date-time
        NewsWeatherPolygon:
          type: string
        WeatherAlertId:
          type: integer
          format: int32
        WeatherEventType:
          type: string
        WeatherEventMeta:
          type: string
        WeatherEventDescText:
          type: string
        RelatedBusinesses:
          type: array
          description: The Name and ID of businesses connected to the story
          items:
            $ref: '#/components/schemas/APINewsStoryBusiness'
        NewsStoryCategories:
          type: array
          items:
            $ref: '#/components/schemas/APINewsStoryCategory'
    APINewsStoryBusiness:
      type: object
      properties:
        BusinessId:
          type: integer
          description: Id of the Business
          format: int32
        BusinessName:
          type: string
          description: Name of the Business
    APINewsStoryCategory:
      type: object
      properties:
        NewsCategoryId:
          type: integer
          description: Id of the NewsCategory
          format: int32
        NewsCategoryName:
          type: string
          description: Name of the NewsCategory
    APIResponseContainer[APIPortfolioBusinessCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIPortfolioBusiness'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIPortfolioBusiness:
      type: object
      properties:
        BusinessId:
          type: integer
          description: Id of the Business
          format: int32
        BusinessName:
          type: string
          description: Name of the Business
        FRISKScore:
          type: integer
          description: FRISKScore for the Business
          format: int32
        FRISKLastChangeDate:
          type: string
          description: Date when the FRISKScore last changed
          format: date-time
        ZScore:
          type: number
          description: Altman Z-score for the Business
          format: double
        ZScoreLastChangeDate:
          type: string
          description: Date when the ZScore was last changed
          format: date-time
        FSRScore:
          type: integer
          description: FSRScore for the Business
          format: int32
        FSRScoreLastChangeDate:
          type: string
          description: Date when the FSRScore was last changed
          format: date-time
        DBTIndex:
          type: integer
          description: Days Beyond Terms Index of the Business
          format: int32
        PAYCEScore:
          type: integer
          description: PAYCE Score for the Business
          format: int32
        PAYCELastChangeDate:
          type: string
          description: Date when the PAYCEScore last changed
          format: date-time
        LatestStatementDate:
          type: string
          description: Latest Statement Date
          format: date-time
        CurrentFiscalYear:
          type: integer
          description: Current Fiscal Year
          format: int32
        CurrentFiscalQuarter:
          type: integer
          description: Current Fiscal Quarter
          format: int32
        FinancialsLastChangeDate:
          type: string
          description: Date when the Financials were last changed
          format: date-time
      description: ""
    APIResponseContainer[String]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: string
          description: ""
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIResponseContainer[APIPortfolioFolderCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APIPortfolioFolder'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIPortfolioFolder:
      type: object
      properties:
        FolderId:
          type: integer
          description: Id of the Folder
          format: int32
        UserId:
          type: integer
          description: UserId of the User that owns this Folder
          format: int32
        FolderName:
          type: string
          description: Name of the Folder
        DateCreated:
          type: string
          description: Creation Date
          format: date-time
        DateUpdated:
          type: string
          description: Updated Date
          format: date-time
      description: ApiPortfolioFolder
    APIResponseContainer[APIPortfolioFolder]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIPortfolioFolder'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIResponseContainer[APIPortfolioScoreHistoryCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIPortfolioScoreHistoryCollection'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIPortfolioScoreHistoryCollection:
      type: object
      properties:
        TotalResults:
          type: integer
          description: Total number of results
          format: int32
        ScoreType:
          type: string
          description: The score type
        Businesses:
          type: array
          description: Businesses with scores
          items:
            $ref: '#/components/schemas/APIPortfolioScoreHistory'
    APIPortfolioScoreHistory:
      type: object
      properties:
        BusinessId:
          type: integer
          description: Business Id
          format: int32
        BusinessName:
          type: string
          description: Business Name
        Scores:
          type: array
          description: Scores
          items:
            $ref: '#/components/schemas/APIPortfolioScore'
    APIPortfolioScore:
      type: object
      properties:
        Year:
          type: integer
          description: Year of the score
          format: int32
        Month:
          type: integer
          description: Month of the score
          format: int32
        Score:
          type: number
          description: Score value
          format: double
    APIResponseContainer[APIToken]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIToken'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIToken:
      type: object
      properties:
        ClientId:
          type: string
    APIResponseContainer[TradeProviderCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/APITradeProvider'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APITradeProvider:
      type: object
      properties:
        TradeProviderId:
          type: integer
          description: TradeProviderId
          format: int32
        TradeProviderName:
          type: string
          description: Name of the Trade Provider
        CurrentTradeProvider:
          type: boolean
          description: True if this is the currently selected Trade Provider
    APIResponseContainer[APIDynamicCollection]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          type: array
          description: ""
          items:
            type: object
            additionalProperties:
              type: object
              properties: {}
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIResponseContainer[APILogin]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APILogin'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APILogin:
      type: object
      properties:
        SessionKey:
          type: string
          description: The Session Key for the user. This Session Key must be sent
            in the header of all subsequent calls.
        Username:
          type: string
          description: Username for the logged in user.
        SessionId:
          type: integer
          description: Session Id
          format: int32
        TwoFactorAuthenticationRequired:
          type: boolean
          description: True when Two Factor Authentication is required for this login.
            A One Time Password will be sent to the phone number on record for the
            user account. Make a subsiquent request to the /v1/Users/2FAKey endpoint
            with the One Time Password to complete Two Factor Authentication.
        Key:
          type: string
          description: When the User account is setup for Device/Browser verification
            this field will contain a value. Send this value with subsequent requests
            to /v1/Users/LoginBrowser to remember 2FA verification requests.
      description: ""
    APIResponseContainer[APIUserInfo]:
      type: object
      properties:
        Success:
          type: boolean
          description: ""
        Data:
          $ref: '#/components/schemas/APIUserInfo'
        ErrorCode:
          type: string
          description: ""
      description: ""
    APIUserInfo:
      type: object
      properties:
        Username:
          type: string
          description: Username for this user.
        RepName:
          type: string
          description: Sales Rep Name
        RepEmail:
          type: string
          description: Sales Rep Email Address
        AccessLevel:
          type: string
          description: API Access Level
      description: ""
  securitySchemes:
    Bearer:
      type: apiKey
      description: "Enter the token with the `Bearer: ` prefix, e.g. "
      name: Authorization
      in: header
x-original-swagger-version: "2.0"